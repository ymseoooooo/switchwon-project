import { AxiosError } from 'axios';

export enum ApiErrorCode {
  BAD_REQUEST = 'BAD_REQUEST',
  NOT_FOUND = 'NOT_FOUND',
  UNAUTHORIZED = 'UNAUTHORIZED',
  VALIDATION_ERROR = 'VALIDATION_ERROR',
  MISSING_PARAMETER = 'MISSING_PARAMETER',
}

export enum DomainErrorCode {
  WALLET_INSUFFICIENT_BALANCE = 'WALLET_INSUFFICIENT_BALANCE',
  INVALID_DEPOSIT_AMOUNT = 'INVALID_DEPOSIT_AMOUNT',
  INVALID_WITHDRAW_AMOUNT = 'INVALID_WITHDRAW_AMOUNT',
  CURRENCY_MISMATCH = 'CURRENCY_MISMATCH',
  INVALID_AMOUNT_SCALE = 'INVALID_AMOUNT_SCALE',
  EXCHANGE_RATE_CURRENCY_MISMATCH = 'EXCHANGE_RATE_CURRENCY_MISMATCH',
  UNSUPPORTED_FOREX_CONVERSION_CURRENCY = 'UNSUPPORTED_FOREX_CONVERSION_CURRENCY',
  INVALID_EXCHANGE_RATE_CURRENCY = 'INVALID_EXCHANGE_RATE_CURRENCY',
  UNSUPPORTED_CURRENCY_FOR_KRW_CONVERSION = 'UNSUPPORTED_CURRENCY_FOR_KRW_CONVERSION',
  EXCHANGE_RATE_MISMATCH = 'EXCHANGE_RATE_MISMATCH',
}

export interface ErrorField<TData = unknown> {
  code: ApiErrorCode | DomainErrorCode;
  message: string;
  data: TData | null;
}

export type ErrorResponse = AxiosError<ErrorField>;
